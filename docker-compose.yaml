services:
  python:
    build:
      context: ./python
      dockerfile: Dockerfile
    volumes:
      - mirror-data:/home/generic/yocto-mirror
    networks:
      - internal
    expose:
      - "5000"
    environment:
      - SERVE=https://github.com/aurelienizl/test
    stop_signal: SIGTERM  # or SIGINT
    stop_grace_period: 1h # 1 hour
    cap_drop:
      - ALL                                    # drop all capabilities
    security_opt:
      - no-new-privileges:true                # prevent any privilege escalation
    ulimits:
      nofile:
        soft: 1024
        hard: 2048
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:5000/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - mirror-data:/yocto-mirror
    depends_on:
      - python
    networks:
      - internal
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE   # to bind TCP 80
      - SETUID             # to drop root→worker UID
      - SETGID             # to drop root→worker GID
      - DAC_OVERRIDE       # to bypass file-mode restrictions
      - CHOWN              # to re-chown files if needed
    security_opt:
      - no-new-privileges:true
    ulimits:
      nofile:
        soft: 1024
        hard: 2048
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost/"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  internal:
    driver: bridge

volumes:
  mirror-data:
